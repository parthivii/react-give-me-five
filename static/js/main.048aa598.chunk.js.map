{"version":3,"sources":["Button.js","ButtonHolder.js","Input.js","index.js"],"names":["Button","state","clicked","handleOnClick","props","updateValue","letter","setState","onClick","this","disabled","React","Component","ButtonHolder","refresh","createButtons","letters","map","prevProps","prevState","Input","value","App","addItem","newItem","list","push","count","clearWord","Card","border","className","Body","variant","length","Table","item","Badge","ReactDOM","render","document","getElementById"],"mappings":"+QA0BeA,G,iNAtBbC,MAAQ,CACNC,SAAS,G,EAGXC,cAAgB,WACT,EAAKF,MAAMC,UACd,EAAKE,MAAMC,YAAY,EAAKD,MAAME,QAClC,EAAKC,SAAS,CACZL,SAAS,M,uDAMb,OACE,4BAAQM,QAASC,KAAKN,cAAeO,SAAUD,KAAKR,MAAMC,SACvDO,KAAKL,MAAME,Y,GAjBCK,IAAMC,YCiCZC,E,4MA/BbZ,MAAQ,CACNa,SAAS,G,EAYXC,cAAgB,WAEd,OADgB,EAAKX,MAAMY,QACZC,KAAI,SAACX,GAAD,OACjB,kBAAC,EAAD,CAAQA,OAAQA,EAAQD,YAAa,EAAKD,MAAMC,kB,iEAbjCa,GACbT,KAAKL,MAAMU,UAAYI,EAAUJ,SACnCL,KAAKF,UAAS,SAACY,GACb,MAAO,CACLL,SAAUK,EAAUL,c,+BAc1B,IAAMA,EAAUL,KAAKR,MAAMa,QAC3B,OACE,oCACIA,EAAiC,KAAvBL,KAAKM,gBAChBD,EAAUL,KAAKM,gBAAkB,U,GA1BfJ,IAAMC,WCKlBQ,E,uKAJX,OAAO,2BAAOC,MAAOZ,KAAKL,MAAMiB,Y,GAFhBV,IAAMC,WCKpBU,E,kDACJ,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IAURC,YAAc,SAACC,GAEb,EAAKC,SAAS,CACZc,MAAO,EAAKpB,MAAMoB,MAAQf,KAdX,EAkBnBiB,QAAU,WAGR,IAAMC,EAAU,CACdH,MAAO,EAAKpB,MAAMoB,OAIdI,EAAI,YAAO,EAAKxB,MAAMwB,MAI5BA,EAAKC,KAAKF,GAIV,EAAKjB,UAAS,SAACY,GACb,MAAO,CACLM,OACAD,QAAS,GACTH,MAAO,GACPP,SAAUK,EAAUL,QACpBa,MAAO,EAAK1B,MAAM0B,MAAQ,OAxCb,EA6CnBC,UAAY,WACV,EAAKrB,UAAS,SAACY,GACb,MAAO,CACLE,MAAO,GACPP,SAAUK,EAAUL,aA/CxB,EAAKb,MAAQ,CACXe,QAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACvDK,MAAO,GACPP,SAAS,EACTW,KAAM,GACNE,MAAO,GAPQ,E,qDAsDT,IAAD,OACP,OACE,kBAACE,EAAA,EAAD,CAAMC,OAAO,SAASC,UAAU,SAC9B,kBAACF,EAAA,EAAKG,KAAN,KACE,6CAEA,kBAAC,EAAD,CACEhB,QAASP,KAAKR,MAAMe,QACpBX,YAAaI,KAAKJ,YAClBS,QAASL,KAAKR,MAAMa,UAGtB,6BACE,kBAAC,EAAD,CAAOO,MAAOZ,KAAKR,MAAMoB,QAEzB,kBAAC,IAAD,CACEU,UAAU,MACVE,QAAQ,UACRzB,QAAS,kBAAM,EAAKe,WACpBb,UAAWD,KAAKR,MAAMoB,MAAMa,QAA+B,IAArBzB,KAAKR,MAAM0B,OAJnD,OASA,kBAAC,IAAD,CAAQI,UAAU,MAAME,QAAQ,UAAUzB,QAASC,KAAKmB,WAAxD,WAKJ,kBAACC,EAAA,EAAKG,KAAN,KACE,kBAACG,EAAA,EAAD,KACE,+BACG1B,KAAKR,MAAMwB,KAAKR,KAAI,SAACmB,GACpB,OACE,4BACE,wBAAIL,UAAU,SAASK,EAAKf,OAC5B,4BACE,kBAACgB,EAAA,EAAD,CAAOJ,QAAQ,SAASF,UAAU,SAC/BK,EAAKf,MAAMa,qB,GA7FlBvB,IAAMC,WA2GxB0B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.048aa598.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nclass Button extends React.Component {\r\n  state = {\r\n    clicked: false,\r\n  };\r\n\r\n  handleOnClick = () => {\r\n    if (!this.state.clicked) {\r\n      this.props.updateValue(this.props.letter);\r\n      this.setState({\r\n        clicked: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <button onClick={this.handleOnClick} disabled={this.state.clicked}>\r\n        {this.props.letter}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\nimport \"./styles.css\";\r\n\r\nclass ButtonHolder extends React.Component {\r\n  state = {\r\n    refresh: false,\r\n  };\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.refresh !== prevProps.refresh) {\r\n      this.setState((prevState) => {\r\n        return {\r\n          refresh: !prevState.refresh,\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  createButtons = () => {\r\n    const letters = this.props.letters;\r\n    return letters.map((letter) => (\r\n      <Button letter={letter} updateValue={this.props.updateValue} />\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    const refresh = this.state.refresh;\r\n    return (\r\n      <>\r\n        {!refresh ? this.createButtons() : null}\r\n        {refresh ? this.createButtons() : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ButtonHolder;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nclass Input extends React.Component {\r\n  render() {\r\n    return <input value={this.props.value} />;\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, Card, Table, Badge } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ButtonHolder from \"./ButtonHolder\";\r\nimport Input from \"./Input\";\r\nimport \"./styles.css\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      letters: [\"P\", \"L\", \"P\", \"T\", \"S\", \"A\", \"C\", \"E\", \"H\", \"D\"],\r\n      value: \"\",\r\n      refresh: false,\r\n      list: [],\r\n      count: 0,\r\n    };\r\n  }\r\n\r\n  updateValue = (letter) => {\r\n    // update the word\r\n    this.setState({\r\n      value: this.state.value + letter,\r\n    });\r\n  };\r\n\r\n  addItem = () => {\r\n    // include new item\r\n\r\n    const newItem = {\r\n      value: this.state.value,\r\n    };\r\n\r\n    // copy current list of items\r\n    const list = [...this.state.list];\r\n\r\n    // add the new item to the list\r\n\r\n    list.push(newItem);\r\n\r\n    // update state with new list, reset the new item input\r\n\r\n    this.setState((prevState) => {\r\n      return {\r\n        list,\r\n        newItem: \"\",\r\n        value: \"\",\r\n        refresh: !prevState.refresh,\r\n        count: this.state.count + 1,\r\n      };\r\n    });\r\n  };\r\n  //clear the item input\r\n  clearWord = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        value: \"\",\r\n        refresh: !prevState.refresh,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card border=\"danger\" className=\"card \">\r\n        <Card.Body>\r\n          <h1>Give Me Five!</h1>\r\n\r\n          <ButtonHolder\r\n            letters={this.state.letters}\r\n            updateValue={this.updateValue}\r\n            refresh={this.state.refresh}\r\n          />\r\n\r\n          <div>\r\n            <Input value={this.state.value} />\r\n\r\n            <Button\r\n              className=\"btn\"\r\n              variant=\"warning\"\r\n              onClick={() => this.addItem()}\r\n              disabled={!this.state.value.length || this.state.count === 5}\r\n            >\r\n              Add\r\n            </Button>\r\n\r\n            <Button className=\"btn\" variant=\"warning\" onClick={this.clearWord}>\r\n              Clear\r\n            </Button>\r\n          </div>\r\n        </Card.Body>\r\n        <Card.Body>\r\n          <Table>\r\n            <tbody>\r\n              {this.state.list.map((item) => {\r\n                return (\r\n                  <tr>\r\n                    <td className=\"value\">{item.value}</td>\r\n                    <td>\r\n                      <Badge variant=\"danger\" className=\"badge\">\r\n                        {item.value.length}\r\n                      </Badge>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}